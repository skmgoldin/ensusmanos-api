AWSTemplateFormatVersion: 2010-09-09

Parameters:
  GithubRepoName:
    Type: String
  GithubRepoBranch:
    Type: String
  GithubToken:
    Type: String
  GithubUser:
    Type: String
  EcrName:
    Type: String
  ServiceStackName:
    Type: String
  UtilityBucket:
    Type: String
  ServiceEnv:
    Type: String

Resources:
  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${AWS::StackName}-build'
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      ServiceRole:
        Fn::GetAtt: CodeBuildRole.Arn
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/docker:18.09.0'
        Type: LINUX_CONTAINER

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: 
      - CodeBuild
    Properties:
      Name: !Sub '${AWS::StackName}::${ServiceEnv}'
      ArtifactStore:
        Location: !Ref UtilityBucket
        Type: S3
      RestartExecutionOnUpdate: true
      RoleArn: 
        Fn::GetAtt: PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: 'github-source'
              ActionTypeId:
                Version: 1
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
              OutputArtifacts:
                - Name: !Sub '${AWS::StackName}-source-artifact'
              Configuration:
                Repo: !Ref GithubRepoName
                Branch: !Ref GithubRepoBranch
                OAuthToken: !Ref GithubToken
                Owner: !Ref GithubUser
              RunOrder: 100
        - Name: Build
          Actions:
            - Name: 'build-test-accept'
              InputArtifacts:
                - Name: !Sub '${AWS::StackName}-source-artifact'
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                - Name: !Sub '${AWS::StackName}-build-artifact'
              Configuration:
                ProjectName: !Sub '${AWS::StackName}-build'
              RunOrder: 100
        - Name: Deploy
          Actions:
            - Name: 'deploy'
              InputArtifacts:
                - Name: !Sub '${AWS::StackName}-build-artifact'
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                StackName: !Ref ServiceStackName
                RoleArn:
                  Fn::GetAtt: CloudFormationProviderRole.Arn
                Capabilities: CAPABILITY_IAM
                TemplateConfiguration: !Sub '${AWS::StackName}-build-artifact::TemplateConfig.json'
                TemplatePath: !Sub '${AWS::StackName}-build-artifact::Service.yaml'

  CloudFormationProviderRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - cloudformation.amazonaws.com
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: !Sub '${AWS::StackName}-cloudformation-provider'
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - 's3:*'
                - 'cloudformation:*'
                - 'ecs:CreateCluster'
              Resource:
                - !Sub 'arn:aws:s3:::${UtilityBucket}*'
                - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ServiceStackName}'
                - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ServiceStackName}/*'
            - Effect: Allow
              Action:
                - 'ecs:*'
                - 'ec2:*'
                - 'dynamodb:*'
                - 'secretsmanager:*'
                - 'elasticloadbalancing:*'
                - 'route53:*'
                - 'acm:*'
                - 'iam:*'
              Resource:
                - '*'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: !Sub '${AWS::StackName}-pipeline'
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - 's3:*'
                - 'ecr:*'
                - 'cloudformation:*'
                - 'codebuild:*'
                - 'iam:PassRole'
              Resource:
                - !Sub '${CodeBuild.Arn}'
                - !Sub 'arn:aws:s3:::${UtilityBucket}*'
                - !Sub 'arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${EcrName}'
                - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ServiceStackName}'
                - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ServiceStackName}/*'
                - !GetAtt CloudFormationProviderRole.Arn
            - Effect: Allow
              Action:
                - 'ecs:Delete*'
                - 'ec2:Delete*'
                - 'secretsmanager:Delete*'
                - 'dynamodb:Delete*'
                - 'elasticloadbalancing:Delete*'
                - 'route53:Delete*'
                - 'acm:Delete*'
                - 'iam:Delete*'
              Resource:
                - '*'

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: !Sub '${AWS::StackName}-codebuild'
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - 's3:*'
                - 'logs:*'
                - 'ecr:*'
                - 'ssm:*'
              Resource:
                - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*'
                - !Sub 'arn:aws:s3:::${UtilityBucket}*'
                - !Sub 'arn:aws:logs:${AWS::Region}:*:*'
                - !Sub 'arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${EcrName}'
            - Effect: Allow
              Action:
                - 'ecr:GetAuthorizationToken'
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - 'cloudformation:ListExports'
              Resource:
                - '*'

